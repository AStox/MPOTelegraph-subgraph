import { clearStore, test, assert } from "matchstick-as/assembly/index";
import {
  createNewMintEvent,
  createNewTransferEvent,
  handleMint,
  handleTransfer,
} from "../src/mapping";
import { Telegraph } from "../generated/schema";
import { Address, log, BigInt, ethereum } from "@graphprotocol/graph-ts";

test("Can call mappings with custom events", () => {
  // Initialise
  //   let telegraph = new Telegraph("1");
  //   telegraph.save();

  let transfer1 = createNewTransferEvent(
    "0x225ef95fa90f4F7938A5b34234d14768cB4263dd",
    "0x4e45AFCf5ea8446be066A163cB274e719020FC41",
    33
  );
  let mint1 = createNewMintEvent(
    "0x225ef95fa90f4F7938A5b34234d14768cB4263dd",
    33,
    "Hello world!"
  );

  let transfer2 = createNewTransferEvent(
    "0x4e45AFCf5ea8446be066A163cB274e719020FC41",
    "0x225ef95fa90f4F7938A5b34234d14768cB4263dd",
    2349076
  );
  let mint2 = createNewMintEvent(
    "0x4e45AFCf5ea8446be066A163cB274e719020FC41",
    2349076,
    "Goodbye world!"
  );

  handleTransfer(transfer1);
  handleMint(mint1);
  handleTransfer(transfer2);
  handleMint(mint2);
  //
  assert.fieldEquals("Telegraph", "33", "id", "33");
  //   assert.fieldEquals(
  //     "Telegraph",
  //     "934984",
  //     "to",
  //     "0x225ef95fa90f4F7938A5b34234d14768cB4263dd"
  //   );
  assert.fieldEquals("Telegraph", "2349076", "message", "Goodbye world!");
  assert.fieldEquals("Telegraph", "2349076", "image", "data:application/json;base64, eyJpbWFnZSI6ICJkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSEJ5WlhObGNuWmxRWE53WldOMFVtRjBhVzg5SW5oTmFXNVpUV2x1SUcxbFpYUWlJSFpwWlhkQ2IzZzlJaTB5TlNBdE1qVWdOREF3SURRd01DSStQSE4wZVd4bFBpNTBaWGgwSUh0bWIyNTBMV1poYldsc2VUb2djMkZ1Y3kxelpYSnBaanNnWm1sc2JEb2dJMEkyTkRFeVFUc2dabTl1ZEMxemFYcGxPaUF4TUhCNE8zMGdMbU52Ym5SbGJuUjdabTl1ZEMxbVlXMXBiSGs2SUcxdmJtOXpjR0ZqWlRzZ1ptbHNiRG9nSXpFME9VTkJOVHNnWm05dWRDMXphWHBsT2lBeE5IQjRPeUJtYjI1MExYZGxhV2RvZERvZ056QXdmU0F1YlhWMFpXUWdlMlpwYkd3NklDTXhRak0wTlRBN0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN2ZTQXVkR2wwYkdVZ2UyWnZiblF0Wm1GdGFXeDVPaUJ6WVc1ekxYTmxjbWxtT3lCbWIyNTBMWGRsYVdkb2REb2dPVEF3T3lCbWFXeHNPaUFqUWpZME1USkJPeUJtYjI1MExYTnBlbVU2SURFemNIZzdmU0F1YldWMFlXUmhkR0VnZTJadmJuUXRabUZ0YVd4NU9pQnRiMjV2YzNCaFkyVTdJR1pwYkd3NklDTXdNRGczUVRNN0lHWnZiblF0YzJsNlpUb2dNVEJ3ZURzZ1ptOXVkQzEzWldsbmFIUTZJRGN3TUgwZ0xuTjFZblJwZEd4bElIdG1iMjUwTFhOcGVtVTZJREU0Y0hnN2ZTQXVkR2x1ZVNCN1ptOXVkQzF6YVhwbE9pQTRjSGdnZlNBdVptbHVaWEJ5YVc1MElIdG1iMjUwTFhOcGVtVTZJRFp3ZUNCOVBDOXpkSGxzWlQ0OGNtVmpkQ0I0UFNJdE1qVWlJSGs5SWkweU5TSWdkMmxrZEdnOUlqUXlOU0lnYUdWcFoyaDBQU0kwTWpVaUlHWnBiR3c5SWlOQk4wTTBReklpSUM4K1BHY2dkSEpoYm5ObWIzSnRQU0owY21GdWMyeGhkR1VvTUN3MU1Da2lQanh5WldOMElIZHBaSFJvUFNJek5UQWlJR2hsYVdkb2REMGlNalV3SWlCbWFXeHNQU0lqTUVReE5ERkdJaUJqYkdGemN6MGlZbUZ6WlNJZ1ptbHNkR1Z5UFNKMWNtd29JMll5S1NJZ2NuZzlJalFpSUhKNVBTSTBJaTgrUEdjZ2RISmhibk5tYjNKdFBTSjBjbUZ1YzJ4aGRHVW9PREFzTkRBcElqNDhkR1Y0ZENCamJHRnpjejBpZEdsMGJHVWlQazFGVkVGV1JWSlRRVXdnVUU5VFZDQlBSa1pKUTBVOEwzUmxlSFErUEd4cGJtVWdlREU5SWpFM0lpQjVNVDBpTXlJZ2VESTlJakUyTUNJZ2VUSTlJak1pSUhOMGNtOXJaVDBpSTBJMk5ERXlRU0l2UGp4MFpYaDBJR05zWVhOelBTSjBhWFJzWlNCemRXSjBhWFJzWlNJZ2VEMGlNelVpSUhrOUlqSXdJajVVUlV4RlIxSkJVRWc4TDNSbGVIUStQQzluUGp4bklIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREV3TERFNEtTSStQSFJsZUhRZ1kyeGhjM005SW5SbGVIUWlJSGc5SWpBaUlIazlJakFpUGs1dkxqd3ZkR1Y0ZEQ0OGRHVjRkQ0JqYkdGemN6MGliV1YwWVdSaGRHRWlJSGc5SWpJd0lpQjVQU0l3SWo0eFBDOTBaWGgwUGp4c2FXNWxJSGd4UFNJeE55SWdlVEU5SWpNaUlIZ3lQU0kyTUNJZ2VUSTlJak1pSUhOMGNtOXJaVDBpSTBJMk5ERXlRU0l2UGp3dlp6NDhaeUIwY21GdWMyWnZjbTA5SW5SeVlXNXpiR0YwWlNneU56QXNNVGdwSWo0OGRHVjRkQ0JqYkdGemN6MGlkR1Y0ZENJZ2VEMGlNQ0lnZVQwaU1DSStRbXh2WTJzOEwzUmxlSFErUEhSbGVIUWdZMnhoYzNNOUltMWxkR0ZrWVhSaElpQjRQU0l6TUNJZ2VUMGlNQ0krT1RrME1UazBNVHd2ZEdWNGRENDhiR2x1WlNCNE1UMGlNamNpSUhreFBTSXpJaUI0TWowaU56VWlJSGt5UFNJeklpQnpkSEp2YTJVOUlpTkNOalF4TWtFaUx6NDhMMmMrUEdjZ2RISmhibk5tYjNKdFBTSjBjbUZ1YzJ4aGRHVW9NamczTERJM0tTSStQSFJsZUhRZ1kyeGhjM005SW5SbGVIUWlJSGc5SWpBaUlIazlJalVpUGtKc2IyTnJJRk4wWVcxd1BDOTBaWGgwUGp4d2IyeDVaMjl1SUhCdmFXNTBjejBpTUN3NElEQXNOVE1zSURVMUxEVXpMQ0ExTlN3NElpQm1hV3hzUFNKdWIyNWxJaUJ6ZEhKdmEyVTlJaU14UWpNME5UQWlJSE4wY205clpTMWtZWE5vWVhKeVlYazlJak1pTHo0OFp5QjBjbUZ1YzJadmNtMDlJblJ5WVc1emJHRjBaU2d0TVN3MEtTQnpZMkZzWlNneExERXBJajQ4WnlCMGNtRnVjMlp2Y20wOUluUnlZVzV6YkdGMFpTZ3lOU3d5TlNrZ2NtOTBZWFJsS0Mwek1Da2dJSE5qWVd4bEtEQXVNeXd3TGpNcElqNDhjRzlzZVdkdmJpQndiMmx1ZEhNOUlqQXNMVFl3SUMwek5Td3dJREFzTWpBZ016VXNNQ0lnWm1sc2JEMGlibTl1WlNJZ2MzUnliMnRsUFNJak1EQTROMEV6SWlCemRISnZhMlV0ZDJsa2RHZzlJak53ZUNJdlBqeHdiMng1WjI5dUlIQnZhVzUwY3owaUxUTTFMREFnTUN3eU1DQXpOU3d3SURBc0xUSXdJaUJtYVd4c1BTSnViMjVsSWlCemRISnZhMlU5SWlNd01EZzNRVE1pSUhOMGNtOXJaUzEzYVdSMGFEMGlNM0I0SWk4K1BIQnZiSGxuYjI0Z2NHOXBiblJ6UFNJdE16VXNNVEFnTUN3Mk1DQXpOU3d4TUNBd0xETXdJaUJtYVd4c1BTSnViMjVsSWlCemRISnZhMlU5SWlNd01EZzNRVE1pSUhOMGNtOXJaUzEzYVdSMGFEMGlNM0I0SWk4K1BDOW5QangwWlhoMElHTnNZWE56UFNKdFpYUmhaR0YwWVNCMGFXNTVJajQ4ZEdWNGRGQmhkR2dnYUhKbFpqMGlJM04wWVcxd0lqNHpNak5qTmpjeFpEUXpNRFZoTTJNM1l6RXpPV0kxTldFeE0yTTFZelE0TVRBM1l6UmhaV0V3UEM5MFpYaDBVR0YwYUQ0OFlXNXBiV0YwWlZSeVlXNXpabTl5YlNCaGRIUnlhV0oxZEdWVWVYQmxQU0pZVFV3aUlHRjBkSEpwWW5WMFpVNWhiV1U5SW5SeVlXNXpabTl5YlNJZ2RIbHdaVDBpY205MFlYUmxJaUJtY205dFBTSXdJREkxSURJMUlpQjBiejBpTXpZd0lESTFJREkxSWlBZ1pIVnlQU0l4TUhNaUlISmxjR1ZoZEVOdmRXNTBQU0pwYm1SbFptbHVhWFJsSWlBdlBqd3ZkR1Y0ZEQ0OGNHRjBhQ0JtYVd4c1BTSnViMjVsSWlCa1BTSk5JQzB5TERJMUlFRWdNamNnTWpjZ01DQXhJREFnTFRJc01qUXVOU0I2SWlCemRISnZhMlU5SWlNd01EZzNRVE1pSUhOMGNtOXJaUzEzYVdSMGFEMGlNU0lnTHo0OEwyYytQQzluUGp4bklIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREFzTVRBd0tTSStQR2NnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01UQXNMVEV3S1NJK1BIUmxlSFFnWTJ4aGMzTTlJblJsZUhRaUlIZzlJakFpSUhrOUlqQWlQa1p5YjIwOEwzUmxlSFErUEhSbGVIUWdZMnhoYzNNOUltMWxkR0ZrWVhSaElpQjRQU0l5T0NJZ2VUMGlNQ0krTUhnMFpUUXVMaTQyWW1Vd1BDOTBaWGgwUGp4c2FXNWxJSGd4UFNJeU5TSWdlVEU5SWpNaUlIZ3lQU0l4TVRBaUlIa3lQU0l6SWlCemRISnZhMlU5SWlOQ05qUXhNa0VpTHo0OEwyYytQR2NnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01qUXdMQzB4TUNraVBqeDBaWGgwSUdOc1lYTnpQU0owWlhoMElpQjRQU0l3SWlCNVBTSXdJajVVYnp3dmRHVjRkRDQ4ZEdWNGRDQmpiR0Z6Y3owaWJXVjBZV1JoZEdFaUlIZzlJakUxSWlCNVBTSXdJajR3ZURSbE5DNHVMalppWlRBOEwzUmxlSFErUEd4cGJtVWdlREU5SWpFeUlpQjVNVDBpTXlJZ2VESTlJakV3TUNJZ2VUSTlJak1pSUhOMGNtOXJaVDBpSTBJMk5ERXlRU0l2UGp3dlp6NDhaeUIwY21GdWMyWnZjbTA5SW5SeVlXNXpiR0YwWlNnd0xEQXBJajQ4YkdsdVpTQjRNVDBpTlNJZ2VURTlJakFpSUhneVBTSXpORFVpSUhreVBTSXdJaUJ6ZEhKdmEyVTlJaU5DTmpReE1rRWlMejQ4YkdsdVpTQjRNVDBpTkRBaUlIa3hQU0l3SWlCNE1qMGlOREFpSUhreVBTSXhORFVpSUhOMGNtOXJaVDBpSTBJMk5ERXlRU0l2UGp4bklIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLRFUxTERJd0tTSStQSFJsZUhRZ1kyeGhjM005SW5SbGVIUWdZMjl1ZEdWdWRDSWdlRDBpTUNJZ2VUMGlMVEl3SWo0OGRITndZVzRnZUQwaU1DSWdaSGs5SWpJd0lqNDhkSE53WVc0Z1kyeGhjM005SW0xMWRHVmtJajQrUEM5MGMzQmhiajQ4ZEhOd1lXNCtTR1ZzYkc4Z1YyOXliR1E4TDNSemNHRnVQand2ZEhOd1lXNCtQSFJ6Y0dGdUlIZzlJakFpSUdSNVBTSXlNQ0krUEhSemNHRnVJR05zWVhOelBTSnRkWFJsWkNJK1Bqd3ZkSE53WVc0K1BIUnpjR0Z1UGp3dmRITndZVzQrUEM5MGMzQmhiajQ4ZEhOd1lXNGdlRDBpTUNJZ1pIazlJakl3SWo0OGRITndZVzRnWTJ4aGMzTTlJbTExZEdWa0lqNCtQQzkwYzNCaGJqNDhkSE53WVc0K1BDOTBjM0JoYmo0OEwzUnpjR0Z1UGp4MGMzQmhiaUI0UFNJd0lpQmtlVDBpTWpBaVBqeDBjM0JoYmlCamJHRnpjejBpYlhWMFpXUWlQajQ4TDNSemNHRnVQangwYzNCaGJqNDhMM1J6Y0dGdVBqd3ZkSE53WVc0K1BDOTBaWGgwUGp4bklIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREFzTVRFNUtTSStQSFJsZUhRZ1kyeGhjM005SW5SbGVIUWdabWx1WlhCeWFXNTBJaUI0UFNJd0lpQjVQU0l3SWo1R1QxSWdUMDVGSUVaU1JVVWdVa1ZUVUU5T1UwVWdWRThnVkVoSlV5QlVSVXhGUjFKQlRTd2dWa2xUU1ZRZ1ZFaEZJRTFGVkVGV1JWSkJUQ0JRVDFOVUlFOUdSa2xEUlNCUFVqd3ZkR1Y0ZEQ0OGRHVjRkQ0JqYkdGemN6MGlkR1Y0ZENCbWFXNWxjSEpwYm5RaUlIZzlJakFpSUhrOUlqWWlQbGRYVnk1TlJWUkJWa1ZTVTBGTVVFOVRWQzVKVHlCWFNWUklJRlJJUlNCWFFVeE1SVlFnVDFkT1NVNUhJRlJJU1ZNZ1RrOU9MVVpWVGtkSlFreEZJRlJGVEVWSFVrRk5Mand2ZEdWNGRENDhMMmMrUEM5blBqd3ZaejQ4TDJjK1BDOW5QanhrWldaelBqeHdZWFJvSUdsa1BTSnpkR0Z0Y0NJZ1ptbHNiRDBpYm05dVpTSWdaRDBpVFNBd0xESTFJRUVnTWpVZ01qVWdNQ0F4SURBZ01Dd3lOQzQ1T1NCNklpQXZQanhtYVd4MFpYSWdhV1E5SW1ZeUlpQjRQU0l0TUM0eElpQjVQU0l0TUM0eElpQjNhV1IwYUQwaU1qQXdKU0lnYUdWcFoyaDBQU0l5TURBbElqNDhabVZQWm1aelpYUWdjbVZ6ZFd4MFBTSnZabVpQZFhRaUlHbHVQU0pUYjNWeVkyVkJiSEJvWVNJZ1pIZzlJakFpSUdSNVBTSXdJaUF2UGp4bVpVZGhkWE56YVdGdVFteDFjaUJ5WlhOMWJIUTlJbUpzZFhKUGRYUWlJR2x1UFNKdlptWlBkWFFpSUhOMFpFUmxkbWxoZEdsdmJqMGlNVEFpSUM4K1BHWmxRbXhsYm1RZ2FXNDlJbE52ZFhKalpVZHlZWEJvYVdNaUlHbHVNajBpWW14MWNrOTFkQ0lnYlc5a1pUMGlibTl5YldGc0lpQXZQand2Wm1sc2RHVnlQand2WkdWbWN6NDhMM04yWno0PSJ9=");

  clearStore();
});
